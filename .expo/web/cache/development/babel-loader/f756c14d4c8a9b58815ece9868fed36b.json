{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Context } from \"../../App\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollection } from \"react-firebase-hooks/firestore\";\nimport { AntDesign } from '@expo/vector-icons';\nimport Loader from \"../Loader/Loader\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Profile() {\n  var _useContext = useContext(Context),\n      firebase = _useContext.firebase,\n      firestore = _useContext.firestore,\n      auth = _useContext.auth;\n\n  var _useAuthState = useAuthState(auth),\n      _useAuthState2 = _slicedToArray(_useAuthState, 1),\n      user = _useAuthState2[0];\n\n  var _useState = useState('null'),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showChat = _useState4[0],\n      setShowChat = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      infoChat = _useState6[0],\n      setInfoChat = _useState6[1];\n\n  var _useState7 = useState({\n    email: '',\n    name: ''\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      info = _useState8[0],\n      setInfo = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      height = _useState10[0],\n      setHeight = _useState10[1];\n\n  var _useCollection = useCollection(firestore.collection('direct').orderBy('createAt')),\n      _useCollection2 = _slicedToArray(_useCollection, 2),\n      messages = _useCollection2[0],\n      loading = _useCollection2[1];\n\n  var StartNewChat = function _callee(secondMembereMail, chatName) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              messages.docs.forEach(function (message) {\n                if (message.data().members.includes(secondMembereMail) && message.data().members.includes(user.email) || user.email == secondMembereMail || info.email.length == 0 || info.name.length == 0) {\n                  throw new Error('Recurring mail');\n                }\n              });\n              firestore.collection('direct').add({\n                createAt: firebase.firestore.FieldValue.serverTimestamp(),\n                chatName: chatName,\n                members: [user.email, secondMembereMail],\n                content: []\n              });\n              setInfo({\n                email: '',\n                name: ''\n              });\n              setError('null');\n            } catch (e) {\n              setError(e.message);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var sendChatMessage = function sendChatMessage(message) {\n    try {\n      if (infoChat.length <= 0) throw new Error('lenght');\n      firestore.doc(message.ref.path).update({\n        'content': [].concat(_toConsumableArray(message.data().content), [{\n          text: infoChat,\n          photoURL: user.photoURL,\n          uid: user.uid,\n          displayName: user.displayName\n        }])\n      });\n      setInfoChat('');\n      setError('null');\n      setHeight(0);\n    } catch (e) {\n      setError(e.message);\n    }\n  };\n\n  if (loading) {\n    return _jsx(Loader, {});\n  }\n\n  var styles = StyleSheet.create({\n    block: {\n      fontSize: 20,\n      width: 300,\n      height: 50,\n      backgroundColor: 'white',\n      borderRadius: 10,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      padding: 10,\n      borderColor: \"#009688\",\n      borderWidth: 2\n    },\n    components: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: '#e3e8e4',\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    view: {\n      margin: 6\n    },\n    button: {\n      width: 300,\n      height: 50,\n      backgroundColor: \"blue\"\n    },\n    appButtonContainer: {\n      elevation: 8,\n      backgroundColor: \"#009688\",\n      borderRadius: 10,\n      width: 300,\n      height: 50,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    appButtonContainer1: {\n      elevation: 8,\n      backgroundColor: \"white\",\n      borderRadius: 10,\n      width: 300,\n      height: 50,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    appButtonText: {\n      fontSize: 18,\n      color: \"#fff\",\n      fontWeight: \"bold\",\n      alignSelf: \"center\",\n      textTransform: \"uppercase\"\n    },\n    appButtonText1: {\n      fontSize: 18,\n      color: \"#009688\",\n      fontWeight: \"bold\",\n      alignSelf: \"center\",\n      textTransform: \"uppercase\"\n    },\n    info: {\n      width: '40%',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    img: {\n      width: 50,\n      height: 50,\n      borderRadius: 50,\n      marginRight: 10\n    },\n    textDesign: {\n      fontSize: 18\n    }\n  });\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      marginTop: 50\n    },\n    children: [_jsxs(View, {\n      children: [_jsx(TextInput, {\n        style: styles.block,\n        value: info.email,\n        onChangeText: function onChangeText(e) {\n          return setInfo({\n            email: e,\n            name: info.name\n          });\n        },\n        placeholder: \"Member Email\"\n      }), _jsx(View, {\n        style: styles.view\n      }), _jsx(TextInput, {\n        style: styles.block,\n        value: info.name,\n        onChangeText: function onChangeText(e) {\n          return setInfo({\n            email: info.email,\n            name: e\n          });\n        },\n        placeholder: \"Chat name\"\n      }), _jsx(View, {\n        style: styles.view\n      }), _jsx(TouchableOpacity, {\n        style: styles.appButtonContainer,\n        onPress: function onPress() {\n          return StartNewChat(info.email, info.name);\n        },\n        children: _jsx(Text, {\n          style: styles.appButtonText,\n          children: \"Start new chat\"\n        })\n      }), error != 'null' ? _jsx(Text, {\n        children: \" Error,Check if the data is correct\"\n      }) : _jsx(_Fragment, {}), _jsx(View, {\n        style: styles.view\n      }), _jsx(View, {\n        style: styles.appButtonContainer1,\n        children: _jsx(Text, {\n          style: {\n            color: \"black\",\n            fontSize: 18\n          },\n          children: \"Chats\"\n        })\n      })]\n    }), _jsx(ScrollView, {\n      children: messages.docs.filter(function (post) {\n        return post.data().members.includes(user.email);\n      }).map(function (message) {\n        return _jsxs(View, {\n          children: [_jsxs(View, {\n            children: [_jsx(View, {\n              style: styles.view\n            }), _jsx(TouchableOpacity, {\n              style: styles.appButtonContainer1,\n              onPress: function onPress() {\n                return setShowChat(message.id);\n              },\n              children: _jsx(Text, {\n                style: styles.appButtonText1,\n                children: message.data().chatName\n              })\n            })]\n          }), showChat == message.id ? _jsx(Modal, {\n            transparent: false,\n            visible: showChat != null,\n            animationType: \"slide\",\n            children: _jsxs(View, {\n              style: {\n                paddingTop: 50,\n                paddingBottom: 80,\n                flex: 1\n              },\n              children: [_jsxs(View, {\n                style: {\n                  justifyContent: \"space-around\",\n                  alignItems: \"center\",\n                  width: \"100%\",\n                  flexDirection: \"row\"\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    color: \"#009688\",\n                    fontSize: 18\n                  },\n                  children: message.data().chatName\n                }), _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    return setShowChat(false);\n                  },\n                  children: _jsx(AntDesign, {\n                    name: \"closecircleo\",\n                    size: 24,\n                    color: \"#009688\"\n                  })\n                })]\n              }), _jsx(ScrollView, {\n                style: {\n                  padding: 20\n                },\n                children: message.data().content.map(function (mess, i) {\n                  return _jsxs(View, {\n                    style: mess.uid != user.uid ? {\n                      width: \"100%\",\n                      borderColor: \"#009688\",\n                      borderWidth: 2,\n                      borderRadius: 5,\n                      marginTop: 10,\n                      padding: 10\n                    } : {\n                      width: \"100%\",\n                      borderColor: \"red\",\n                      borderWidth: 2,\n                      borderRadius: 5,\n                      marginTop: 10,\n                      padding: 10\n                    },\n                    children: [_jsxs(View, {\n                      style: styles.info,\n                      children: [_jsx(Image, {\n                        style: styles.img,\n                        source: {\n                          uri: mess.photoURL,\n                          width: 60,\n                          height: 60,\n                          resizeMode: \"contain\"\n                        }\n                      }), _jsx(Text, {\n                        style: {\n                          fontSize: 18\n                        },\n                        children: mess.displayName\n                      })]\n                    }), _jsx(View, {\n                      style: styles.view\n                    }), _jsx(Text, {\n                      style: {\n                        color: \"gray\"\n                      },\n                      children: mess.text\n                    })]\n                  }, i);\n                })\n              }), _jsx(KeyboardAvoidingView, {\n                behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n                style: {\n                  flex: 1,\n                  marginTop: 150\n                },\n                children: _jsxs(View, {\n                  style: {\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    flexDirection: 'column'\n                  },\n                  children: [_jsx(TextInput, {\n                    style: styles.block,\n                    multiline: true,\n                    onContentSizeChange: function onContentSizeChange(event) {\n                      setHeight(event.nativeEvent.contentSize.height);\n                    },\n                    placeholder: \"Type a message\",\n                    value: infoChat,\n                    onChangeText: setInfoChat\n                  }), _jsx(View, {\n                    style: styles.view\n                  }), _jsx(TouchableOpacity, {\n                    onPress: function onPress() {\n                      return sendChatMessage(message);\n                    },\n                    style: styles.appButtonContainer,\n                    children: _jsx(Text, {\n                      style: styles.appButtonText,\n                      children: \"Send\"\n                    })\n                  })]\n                })\n              })]\n            })\n          }) : _jsx(_Fragment, {})]\n        }, message.id);\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useContext","useState","Context","useAuthState","useCollection","AntDesign","Loader","Profile","firebase","firestore","auth","user","error","setError","showChat","setShowChat","infoChat","setInfoChat","email","name","info","setInfo","height","setHeight","collection","orderBy","messages","loading","StartNewChat","secondMembereMail","chatName","docs","forEach","message","data","members","includes","length","Error","add","createAt","FieldValue","serverTimestamp","content","e","sendChatMessage","doc","ref","path","update","text","photoURL","uid","displayName","styles","StyleSheet","create","block","fontSize","width","backgroundColor","borderRadius","alignItems","justifyContent","padding","borderColor","borderWidth","components","flex","view","margin","button","appButtonContainer","elevation","appButtonContainer1","appButtonText","color","fontWeight","alignSelf","textTransform","appButtonText1","flexDirection","img","marginRight","textDesign","marginTop","filter","post","map","id","paddingTop","paddingBottom","mess","i","uri","resizeMode","Platform","OS","event","nativeEvent","contentSize"],"sources":["/Users/user/Desktop/ReactNativeFinal/Components/MessengerScreen/Messenger.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { ScrollView, Text, TouchableOpacity, View, TextInput, Modal, Image, StyleSheet ,KeyboardAvoidingView } from 'react-native';\r\nimport { Context } from \"../../App\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport Loader from \"../Loader/Loader\";\r\n\r\nexport default function Profile() {\r\n    const { firebase, firestore, auth } = useContext(Context)\r\n    const [user] = useAuthState(auth)\r\n    const [error, setError] = useState('null')\r\n    const [showChat, setShowChat] = useState(false);\r\n    const [infoChat, setInfoChat] = useState('');\r\n    const [info, setInfo] = useState({ email: '', name: '' })\r\n    const [height, setHeight] = useState(0);\r\n    const [messages, loading] = useCollection(\r\n        firestore.collection('direct').orderBy('createAt')\r\n    )\r\n    const StartNewChat = async (secondMembereMail, chatName) => {\r\n        try {\r\n            messages.docs.forEach(message => {\r\n                if ((message.data().members.includes(secondMembereMail) && message.data().members.includes(user.email))\r\n                    || user.email == secondMembereMail\r\n                    || info.email.length == 0 || info.name.length == 0\r\n                ) { throw new Error('Recurring mail') }\r\n            })\r\n            firestore.collection('direct').add({\r\n                createAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n                chatName: chatName,\r\n                members: [user.email, secondMembereMail],\r\n                content: []\r\n            })\r\n            setInfo({ email: '', name: '' })\r\n            setError('null')\r\n        }\r\n        catch (e) {\r\n            setError(e.message)\r\n        }\r\n\r\n    }\r\n\r\n    const sendChatMessage = (message) => {\r\n        try {\r\n            if (infoChat.length <= 0) throw new Error('lenght')\r\n            firestore.doc(message.ref.path).update({ 'content': [...message.data().content, { text: infoChat, photoURL: user.photoURL, uid: user.uid, displayName: user.displayName }] })\r\n            setInfoChat('')\r\n            setError('null')\r\n            setHeight(0)\r\n        }\r\n        catch (e) {\r\n            setError(e.message)\r\n        }\r\n\r\n    }\r\n    if (loading) {\r\n        return <Loader />\r\n    }\r\n    const styles = StyleSheet.create({\r\n        block: {\r\n            fontSize: 20,\r\n            width: 300,\r\n            height: 50,\r\n            backgroundColor: 'white',\r\n            borderRadius: 10,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            padding: 10,\r\n            borderColor: \"#009688\",\r\n            borderWidth: 2,\r\n        },\r\n        components: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: '#e3e8e4',\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        view: {\r\n            margin: 6,\r\n        },\r\n        button: {\r\n            width: 300,\r\n            height: 50,\r\n            backgroundColor: \"blue\"\r\n        },\r\n        appButtonContainer: {\r\n            elevation: 8,\r\n            backgroundColor: \"#009688\",\r\n            borderRadius: 10,\r\n            width: 300,\r\n            height: 50,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        appButtonContainer1: {\r\n            elevation: 8,\r\n            backgroundColor: \"white\",\r\n            borderRadius: 10,\r\n            width: 300,\r\n            height: 50,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        appButtonText: {\r\n            fontSize: 18,\r\n            color: \"#fff\",\r\n            fontWeight: \"bold\",\r\n            alignSelf: \"center\",\r\n            textTransform: \"uppercase\",\r\n        },\r\n        appButtonText1: {\r\n            fontSize: 18,\r\n            color: \"#009688\",\r\n            fontWeight: \"bold\",\r\n            alignSelf: \"center\",\r\n            textTransform: \"uppercase\",\r\n        },\r\n        info: {\r\n            width: '40%',\r\n            flex: 1,\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n        },\r\n        img: {\r\n            width: 50,\r\n            height: 50,\r\n            borderRadius: 50,\r\n            marginRight: 10,\r\n        },\r\n        textDesign: {\r\n            fontSize: 18,\r\n        },\r\n    });\r\n    return (\r\n        <View style={{ flex: 1, alignItems: \"center\", marginTop: 50 }}>\r\n            <View>\r\n                <TextInput style={styles.block} value={info.email} onChangeText={(e) => setInfo({ email: e, name: info.name })} placeholder='Member Email'></TextInput>\r\n                <View style={styles.view}></View>\r\n                <TextInput style={styles.block} value={info.name} onChangeText={(e) => setInfo({ email: info.email, name: e })} placeholder='Chat name'></TextInput>\r\n                <View style={styles.view}></View>\r\n                <TouchableOpacity style={styles.appButtonContainer} onPress={() => StartNewChat(info.email, info.name)}><Text style={styles.appButtonText}>Start new chat</Text></TouchableOpacity>\r\n                {(error != 'null') ? <Text> Error,Check if the data is correct</Text> : <></>}\r\n                <View style={styles.view}></View>\r\n                <View style={styles.appButtonContainer1}><Text style={{ color: \"black\", fontSize: 18 }}>Chats</Text></View>\r\n            </View>\r\n            <ScrollView>\r\n                {messages.docs.filter(post => post.data().members.includes(user.email)).map((message) =>\r\n                    <View key={message.id}>\r\n\r\n                        <View>\r\n                            <View style={styles.view}></View>\r\n                            <TouchableOpacity style={styles.appButtonContainer1} onPress={() => setShowChat(message.id)}><Text style={styles.appButtonText1}>{message.data().chatName}</Text></TouchableOpacity>\r\n                        </View>\r\n\r\n                        {(showChat == message.id) ?\r\n                            <Modal transparent={false} visible={showChat != null} animationType='slide'>\r\n                                <View style={{ paddingTop: 50, paddingBottom: 80, flex: 1 }}>\r\n                                    <View style={{ justifyContent: \"space-around\", alignItems: \"center\", width: \"100%\", flexDirection: \"row\", }}>\r\n                                        <Text style={{ color: \"#009688\", fontSize: 18, }}>{message.data().chatName}</Text>\r\n                                        <TouchableOpacity onPress={() => setShowChat(false)} ><AntDesign name=\"closecircleo\" size={24} color=\"#009688\" /></TouchableOpacity>\r\n                                    </View>\r\n                                    <ScrollView style={{ padding: 20,}}>\r\n                                        {\r\n                                            message.data().content.map((mess, i) =>\r\n\r\n                                                <View style={(mess.uid != user.uid)? {\r\n                                                    width: \"100%\", borderColor: \"#009688\",\r\n                                                    borderWidth: 2, borderRadius: 5, marginTop: 10, padding: 10\r\n                                                } :{width: \"100%\", borderColor: \"red\",\r\n                                                borderWidth: 2, borderRadius: 5, marginTop: 10, padding: 10}} key={i}>\r\n\r\n                                                    <View style={styles.info}>\r\n\r\n                                                        <Image style={styles.img} source={{\r\n                                                            uri: mess.photoURL,\r\n                                                            width: 60,\r\n                                                            height: 60,\r\n                                                            resizeMode: \"contain\"\r\n                                                        }} />\r\n                                                        <Text style={{ fontSize: 18 }}>{mess.displayName}</Text>\r\n                                                    </View>\r\n                                                    <View style={styles.view}></View>\r\n                                                    <Text style={{ color: \"gray\" }}>{mess.text}</Text>\r\n                                                </View>)}\r\n\r\n                                    </ScrollView>\r\n                                    <KeyboardAvoidingView\r\n                                    behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n                                    style={{flex:1,marginTop:150}}\r\n                                    >\r\n                                        <View style={{ alignItems: \"center\", justifyContent: \"flex-end\", flexDirection: 'column' }}>\r\n                                            <TextInput style={styles.block} multiline onContentSizeChange={(event) => { setHeight(event.nativeEvent.contentSize.height) }} placeholder='Type a message' value={infoChat} onChangeText={setInfoChat}></TextInput>\r\n                                            <View style={styles.view}></View>\r\n                                            <TouchableOpacity onPress={() => sendChatMessage(message)} style={styles.appButtonContainer}><Text style={styles.appButtonText}>Send</Text></TouchableOpacity>\r\n                                        </View>\r\n                                    </KeyboardAvoidingView>\r\n                                </View>\r\n                            </Modal> : <></>}\r\n                    </View>\r\n                )}\r\n\r\n\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}