{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Context } from \"../../App\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PostEdit() {\n  var _useContext = useContext(Context),\n      auth = _useContext.auth,\n      firestore = _useContext.firestore,\n      firebase = _useContext.firebase;\n\n  var _useAuthState = useAuthState(auth),\n      _useAuthState2 = _slicedToArray(_useAuthState, 1),\n      user = _useAuthState2[0];\n\n  var _useState = useState('null'),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  var _useState5 = useState({\n    content: '',\n    imgScr: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      postInfo = _useState6[0],\n      setPostInfo = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      height = _useState8[0],\n      setHeight = _useState8[1];\n\n  var sendMessage = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!(!postInfo.content.length > 0)) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error('content-is-null');\n\n          case 3:\n            firestore.collection('posts').add({\n              uid: user.uid,\n              displayName: user.displayName,\n              text: postInfo.content,\n              img: postInfo.imgScr,\n              photoURL: user.photoURL,\n              createAt: firebase.firestore.FieldValue.serverTimestamp(),\n              likeCount: 0,\n              likeSendUsersId: [],\n              commentCount: 0,\n              comments: []\n            });\n            setPostInfo({\n              content: '',\n              imgScr: ''\n            });\n            setHeight(0);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            setError(_context.t0.message);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var style = StyleSheet.create({\n    postdesign: {\n      width: 100,\n      height: 40,\n      flex: 1,\n      backgroundColor: \"white\",\n      justifyContent: 'center',\n      alignItems: \"center\",\n      borderRadius: 30,\n      marginTop: 10,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      borderColor: \"black\"\n    },\n    block: {\n      fontSize: 20,\n      width: 300,\n      maxHeight: 50 + height,\n      backgroundColor: '#e3e8e4',\n      borderRadius: 10,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      padding: 10\n    },\n    components: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: '#e3e8e4',\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    view: {\n      margin: 6\n    },\n    button: {\n      width: 300,\n      height: 50,\n      backgroundColor: \"blue\"\n    },\n    appButtonContainer: {\n      elevation: 8,\n      backgroundColor: \"#009688\",\n      borderRadius: 10,\n      paddingVertical: 10,\n      paddingHorizontal: 115\n    },\n    appButtonText: {\n      fontSize: 15,\n      color: \"#fff\",\n      fontWeight: \"bold\",\n      alignSelf: \"center\",\n      textTransform: \"uppercase\"\n    }\n  });\n  return _jsxs(View, {\n    children: [_jsx(TouchableOpacity, {\n      style: style.postdesign,\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      children: _jsx(Text, {\n        children: \"Posting\"\n      })\n    }), _jsx(Modal, {\n      animationType: \"fade\",\n      transparent: true,\n      visible: modalVisible,\n      children: _jsx(View, {\n        style: {\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          backgroundColor: 'rgba(52, 52, 52, 0.8)'\n        },\n        children: _jsxs(View, {\n          style: {\n            flex: 1,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            backgroundColor: 'white',\n            borderRadius: 20,\n            padding: 35,\n            maxHeight: 250 + height\n          },\n          children: [_jsx(TextInput, {\n            style: style.block,\n            multiline: true,\n            onContentSizeChange: function onContentSizeChange(event) {\n              setHeight(event.nativeEvent.contentSize.height);\n            },\n            value: postInfo.content,\n            onChangeText: function onChangeText(text) {\n              return setPostInfo({\n                content: text,\n                imgScr: postInfo.imgScr\n              });\n            },\n            placeholder: \"Text\"\n          }), _jsx(View, {\n            style: style.view\n          }), _jsx(TextInput, {\n            style: style.block,\n            value: postInfo.imgScr,\n            onChangeText: function onChangeText(text) {\n              return setPostInfo({\n                content: postInfo.content,\n                imgScr: text\n              });\n            },\n            placeholder: \"Image SCR\"\n          }), _jsx(View, {\n            style: style.view\n          }), error != 'null' ? _jsx(Text, {\n            children: \"Error , type a content\"\n          }) : _jsx(_Fragment, {}), _jsx(TouchableOpacity, {\n            style: style.appButtonContainer,\n            onPress: sendMessage,\n            children: _jsx(Text, {\n              style: style.appButtonText,\n              children: \"Publicate\"\n            })\n          }), _jsx(View, {\n            style: style.view\n          }), _jsx(TouchableOpacity, {\n            style: style.appButtonContainer,\n            onPress: function onPress() {\n              return setModalVisible(false);\n            },\n            children: _jsx(Text, {\n              style: style.appButtonText,\n              children: \"     Close     \"\n            })\n          })]\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useContext","useState","Context","useAuthState","PostEdit","auth","firestore","firebase","user","error","setError","modalVisible","setModalVisible","content","imgScr","postInfo","setPostInfo","height","setHeight","sendMessage","length","Error","collection","add","uid","displayName","text","img","photoURL","createAt","FieldValue","serverTimestamp","likeCount","likeSendUsersId","commentCount","comments","message","style","StyleSheet","create","postdesign","width","flex","backgroundColor","justifyContent","alignItems","borderRadius","marginTop","marginLeft","marginRight","borderColor","block","fontSize","maxHeight","padding","components","view","margin","button","appButtonContainer","elevation","paddingVertical","paddingHorizontal","appButtonText","color","fontWeight","alignSelf","textTransform","event","nativeEvent","contentSize"],"sources":["/Users/user/Desktop/ReactNativeFinal/Components/PostEdit/PostEdit.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { TextInput, Text, Modal, View, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { Context } from \"../../App\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\n\r\nexport default function PostEdit() {\r\n    const { auth, firestore, firebase } = useContext(Context)\r\n    const [user] = useAuthState(auth)\r\n    const [error, setError] = useState('null')\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [postInfo, setPostInfo] = useState({ content: '', imgScr: '' })\r\n    const [height, setHeight] = useState(0);\r\n    const sendMessage = async () => {\r\n        \r\n        try {\r\n            if (!postInfo.content.length > 0) { throw new Error('content-is-null') }\r\n            firestore.collection('posts').add({\r\n                uid: user.uid,\r\n                displayName: user.displayName,\r\n                text: postInfo.content,\r\n                img: postInfo.imgScr,\r\n                photoURL: user.photoURL,\r\n                createAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n                likeCount: 0,\r\n                likeSendUsersId: [],\r\n                commentCount: 0,\r\n                comments: []\r\n            })\r\n            setPostInfo({ content: '', imgScr: '' })\r\n            setHeight(0)\r\n        }\r\n        catch (e) {\r\n            setError(e.message)\r\n        }\r\n    }\r\n    const style = StyleSheet.create({\r\n        postdesign: {\r\n            width: 100,\r\n            height: 40,\r\n            flex: 1,\r\n            backgroundColor: \"white\",\r\n            justifyContent: 'center',\r\n            alignItems: \"center\",\r\n            borderRadius: 30,\r\n            marginTop: 10,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            borderColor:\"black\",\r\n        },\r\n        block: {\r\n            fontSize: 20,\r\n            width: 300,\r\n            maxHeight: 50 + height,\r\n            backgroundColor: '#e3e8e4',\r\n            borderRadius: 10,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            padding: 10,\r\n        },\r\n        components: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: '#e3e8e4',\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        view: {\r\n            margin: 6,\r\n        },\r\n        button: {\r\n            width: 300,\r\n            height: 50,\r\n            backgroundColor: \"blue\"\r\n        },\r\n        appButtonContainer: {\r\n            elevation: 8,\r\n            backgroundColor: \"#009688\",\r\n            borderRadius: 10,\r\n            paddingVertical: 10,\r\n            paddingHorizontal: 115,\r\n        },\r\n        appButtonText: {\r\n            fontSize: 15,\r\n            color: \"#fff\",\r\n            fontWeight: \"bold\",\r\n            alignSelf: \"center\",\r\n            textTransform: \"uppercase\",\r\n        },\r\n    \r\n    \r\n    });\r\n    return (\r\n        <View>\r\n            <TouchableOpacity style={style.postdesign} onPress={() => setModalVisible(true)}  ><Text>Posting</Text></TouchableOpacity>\r\n            <Modal\r\n                animationType=\"fade\"\r\n                transparent={true}\r\n                visible={modalVisible}>\r\n                <View\r\n                    style={{\r\n                        flex: 1,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        backgroundColor: 'rgba(52, 52, 52, 0.8)',\r\n\r\n                    }} >\r\n                    <View style={{\r\n                        flex: 1,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        backgroundColor: 'white',\r\n                        borderRadius: 20,\r\n                        padding: 35, \r\n                        maxHeight: 250 + height\r\n\r\n                    }}>\r\n                        <TextInput style={style.block} multiline onContentSizeChange={(event) => { setHeight(event.nativeEvent.contentSize.height) }} value={postInfo.content} onChangeText={text => setPostInfo({ content: text, imgScr: postInfo.imgScr })}\r\n                            placeholder='Text'></TextInput>\r\n                        <View style = {style.view}></View>\r\n                        <TextInput style={style.block}  value={postInfo.imgScr} onChangeText={text => setPostInfo({ content: postInfo.content, imgScr: text })}\r\n                            placeholder='Image SCR'></TextInput>\r\n                        <View style = {style.view}></View>\r\n                        {(error != 'null') ? (<Text>Error , type a content</Text>) : (<></>)}\r\n                        <TouchableOpacity style = {style.appButtonContainer} onPress={sendMessage}  ><Text style = {style.appButtonText}>Publicate</Text></TouchableOpacity>\r\n                        <View style = {style.view}></View>\r\n                        <TouchableOpacity style = {style.appButtonContainer} onPress={() => setModalVisible(false)}  ><Text style = {style.appButtonText}>     Close     </Text></TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n\r\n            </Modal>\r\n        </View>\r\n    );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}